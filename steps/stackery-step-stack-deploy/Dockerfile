# This file is automatically generated by the Nebula SDK. DO NOT EDIT.

FROM python:3-alpine
RUN set -eux ; \
    mkdir -p /tmp/ni && \
    cd /tmp/ni && \
    wget https://packages.nebula.puppet.net/sdk/ni/v1/ni-v1-linux-amd64.tar.xz && \
    wget https://packages.nebula.puppet.net/sdk/ni/v1/ni-v1-linux-amd64.tar.xz.sha256 && \
    echo "$( cat ni-v1-linux-amd64.tar.xz.sha256 )  ni-v1-linux-amd64.tar.xz" | sha256sum -c - && \
    tar -xvJf ni-v1-linux-amd64.tar.xz && \
    mv ni-v1*-linux-amd64 /usr/local/bin/ni && \
    cd - && \
    rm -fr /tmp/ni
RUN apk --no-cache add bash ca-certificates curl git jq openssh && update-ca-certificates
RUN apk --no-cache add build-base libc6-compat python3-dev
RUN ["/bin/bash", "-c", "pip install awscli aws-sam-cli cfn_flip"]
RUN ["/bin/bash", "-c", "set -eux\nmkdir -p /tmp/stackery \u0026\u0026 \\\n  cd /tmp/stackery \u0026\u0026 \\\n  curl -L -o stackery --compressed https://ga.cli.stackery.io/linux/stackery \u0026\u0026 \\\n  chmod +x stackery \u0026\u0026 \\\n  mv stackery /usr/local/bin/stackery \u0026\u0026 \\\n  cd - \u0026\u0026 \\\n  rm -fr /tmp/stackery\n"]
COPY "./step.sh" "/nebula/step-stackery-deploy.sh"
ENTRYPOINT []
CMD ["/bin/bash", "/nebula/step-stackery-deploy.sh"]

LABEL "org.opencontainers.image.title"="Deploy with Stackery"
LABEL "org.opencontainers.image.description"="This task deploys a Stackery stack to an environment."
LABEL "com.puppet.nebula.sdk.version"="v1"
